git:
  depth: 10

branches:
  only:
  - master
  - /^[0-9.]+-releases$/

matrix:
  include:
    - os: linux
      dist: trusty
      env: NODE_VERSION=6.9.4 DISPLAY=:99.0 CC=clang CXX=clang++ npm_config_clang=1

sudo: required

before_install:
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"

install:
  - git clone https://github.com/creationix/nvm.git /tmp/.nvm
  - source /tmp/.nvm/nvm.sh
  - nvm install $NODE_VERSION
  - nvm use --delete-prefix $NODE_VERSION
  - npm install -g npm@5.3.0
  - script/build --create-debian-package --create-rpm-package --compress-artifacts
  - find /tmp/atom-*/
  - cd /tmp/atom-*/
  - wget -c https://github.com/probonopd/AppImageKit/releases/download/8/AppRun-x86_64 -O AppRun
  - chmod a+x ./AppRun
  - cp usr/share/applications/atom.desktop .
  - cp usr/share/pixmaps/atom.png .
  - cd -
  - wget -c "https://github.com/probonopd/AppImageKit/releases/download/8/appimagetool-x86_64.AppImage" 
  - chmod a+x appimagetool*.AppImage
  - ./appimagetool*.AppImage --appimage-extract
  - export VERSION=git.$(git rev-parse --short HEAD)
  - ./squashfs-root/AppRun /tmp/atom-*/
  - curl --upload-file ./Atom-*.AppImage https://transfer.sh/Atom-$VERSION-x86_64.AppImage # DELETE THIS LINE
  - mv Atom-*.AppImage out/
  - ls -lh

script:
  - script/lint
  - script/test

cache:
  directories:
    - electron
    - node_modules
    - apm/node_modules
    - script/node_modules
    - ~/.atom/compile-cache
    - ~/.atom/snapshot-cache

notifications:
  email:
    on_success: never
    on_failure: change

addons:
  artifacts:
    paths:
      - out/atom-amd64.deb
      - out/atom.x86_64.rpm
      - out/atom-amd64.tar.gz
      - out/Atom-*.AppImage
    target_paths: travis-artifacts/$TRAVIS_BUILD_ID
  apt:
    packages:
    - build-essential
    - clang-3.3
    - fakeroot
    - git
    - libsecret-1-dev
    - rpm
    - libx11-dev
    - libxkbfile-dev
