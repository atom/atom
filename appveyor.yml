image: Visual Studio 2015

version: "{build}"

skip_tags: true
clone_folder: c:\projects\atom
clone_depth: 10

branches:
  only:
  - master
  - /^[0-9.]+-releases$/

platform:
  - x64
  - x86

environment:
  global:
    ATOM_DEV_RESOURCE_PATH: c:\projects\atom
    TEST_JUNIT_XML_ROOT: c:\projects\junit-test-results
    NODE_VERSION: 6.9.4

  matrix:
  - TASK: test
  - TASK: installer

matrix:
  fast_finish: true

install:
  - IF NOT EXIST %TEST_JUNIT_XML_ROOT% MKDIR %TEST_JUNIT_XML_ROOT%
  - SET PATH=C:\Program Files\Atom\resources\cli;%PATH%
  - ps: Install-Product node $env:NODE_VERSION $env:PLATFORM
  - npm install -g npm@5.3.0

build_script:
  - CD %APPVEYOR_BUILD_FOLDER%
  - ps: |
      New-Item -Name "out" -ItemType "directory"
      if ($env:TASK -eq "installer") {
        if ($env:PROCESSOR_ARCHITECTURE -eq "x86") {
          "C`n" | Set-Content -NoNewline "out\c.txt"
          "D`n" | Set-Content -NoNewline "out\d.txt"
        } else {
          "G`n" | Set-Content -NoNewline "out\g.txt"
          "H`n" | Set-Content -NoNewline "out\h.txt"
        }
      } else {
        "WRONG`n" | Set-Content -NoNewline "out\c.txt"
        "WRONG`n" | Set-Content -NoNewline "out\d.txt"
      }

test_script:
  - ECHO nope

deploy: off
artifacts:
  - path: out\c.txt
    name: c.txt
  - path: out\d.txt
    name: d.txt
  - path: out\g.txt
    name: g.txt
  - path: out\h.txt
    name: h.txt

cache:
  - '%APPVEYOR_BUILD_FOLDER%\electron'
  - '%USERPROFILE%\.atom\.apm'
  - '%USERPROFILE%\.atom\compile-cache'
