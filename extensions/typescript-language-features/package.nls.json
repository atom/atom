{
	"displayName": "TypeScript and JavaScript Language Features",
	"description": "Provides rich language support for JavaScript and TypeScript.",
	"reloadProjects.title": "Reload Project",
	"configuration.typescript": "TypeScript",
	"configuration.suggest.completeFunctionCalls": "Complete functions with their parameter signature.",
	"typescript.tsdk.desc": "Specifies the folder path containing the tsserver and lib*.d.ts files to use.",
	"typescript.disableAutomaticTypeAcquisition": "Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.",
	"typescript.tsserver.log": "Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.",
	"typescript.tsserver.pluginPaths": "Additional paths to discover Typescript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.",
	"typescript.tsserver.pluginPaths.item": "Either an absolute or relative path. Relative path will be resolved against workspace folder(s).",
	"typescript.tsserver.trace": "Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.",
	"typescript.validate.enable": "Enable/disable TypeScript validation.",
	"typescript.format.enable": "Enable/disable default TypeScript formatter.",
	"javascript.format.enable": "Enable/disable default JavaScript formatter.",
	"format.insertSpaceAfterCommaDelimiter": "Defines space handling after a comma delimiter.",
	"format.insertSpaceAfterConstructor": "Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.",
	"format.insertSpaceAfterSemicolonInForStatements": "Defines space handling after a semicolon in a for statement.",
	"format.insertSpaceBeforeAndAfterBinaryOperators": "Defines space handling after a binary operator.",
	"format.insertSpaceAfterKeywordsInControlFlowStatements": "Defines space handling after keywords in a control flow statement.",
	"format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": "Defines space handling after function keyword for anonymous functions.",
	"format.insertSpaceBeforeFunctionParenthesis": "Defines space handling before function argument parentheses.",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": "Defines space handling after opening and before closing non-empty parenthesis.",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": "Defines space handling after opening and before closing non-empty brackets.",
	"format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": "Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.",
	"format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": "Defines space handling after opening and before closing template string braces.",
	"format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": "Defines space handling after opening and before closing JSX expression braces.",
	"format.insertSpaceAfterTypeAssertion": "Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.",
	"format.placeOpenBraceOnNewLineForFunctions": "Defines whether an open brace is put onto a new line for functions or not.",
	"format.placeOpenBraceOnNewLineForControlBlocks": "Defines whether an open brace is put onto a new line for control blocks or not.",
	"javascript.validate.enable": "Enable/disable JavaScript validation.",
	"goToProjectConfig.title": "Go to Project Configuration",
	"javascript.referencesCodeLens.enabled": "Enable/disable references CodeLens in JavaScript files.",
	"typescript.referencesCodeLens.enabled": "Enable/disable references CodeLens in TypeScript files.",
	"typescript.implementationsCodeLens.enabled": "Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.",
	"typescript.openTsServerLog.title": "Open TS Server log.",
	"typescript.restartTsServer": "Restart TS server.",
	"typescript.selectTypeScriptVersion.title": "Select TypeScript Version.",
	"typescript.reportStyleChecksAsWarnings": "Report style checks as warnings.",
	"jsDocCompletion.enabled": "Enable/disable auto JSDoc comments.",
	"javascript.implicitProjectConfig.checkJs": "Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
	"typescript.npm": "Specifies the path to the NPM executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.",
	"typescript.check.npmIsInstalled": "Check if NPM is installed for Automatic Type Acquisition.",
	"configuration.suggest.names": "Enable/disable including unique names from the file in JavaScript suggestions.",
	"typescript.tsc.autoDetect": "Controls auto detection of tsc tasks.",
	"typescript.tsc.autoDetect.off": "Disable this feature.",
	"typescript.tsc.autoDetect.on": "Create both build and watch tasks.",
	"typescript.tsc.autoDetect.build": "Only create single run compile tasks.",
	"typescript.tsc.autoDetect.watch": "Only create compile and watch tasks.",
	"typescript.problemMatchers.tsc.label": "TypeScript problems",
	"typescript.problemMatchers.tscWatch.label": "TypeScript problems (watch mode)",
	"configuration.suggest.paths": "Enable/disable suggestions for paths in import statements and require calls.",
	"typescript.locale": "Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.",
	"javascript.implicitProjectConfig.experimentalDecorators": "Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.",
	"configuration.suggest.autoImports": "Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.",
	"taskDefinition.tsconfig.description": "The tsconfig file that defines the TS build.",
	"javascript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for JavaScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
	"typescript.suggestionActions.enabled": "Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.",
	"typescript.preferences.quoteStyle": "Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.",
	"typescript.preferences.importModuleSpecifier": "Preferred path style for auto imports.",
	"typescript.preferences.importModuleSpecifier.auto": "Infer the shortest path type.",
	"typescript.preferences.importModuleSpecifier.relative": "Relative to the file location.",
	"typescript.preferences.importModuleSpecifier.nonRelative": "Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.",
	"typescript.updateImportsOnFileMove.enabled": "Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.",
	"typescript.updateImportsOnFileMove.enabled.prompt": "Prompt on each rename.",
	"typescript.updateImportsOnFileMove.enabled.always": "Always update paths automatically.",
	"typescript.updateImportsOnFileMove.enabled.never": "Never rename paths and don't prompt.",
	"typescript.autoClosingTags": "Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace.",
	"typescript.suggest.enabled": "Enabled/disable autocomplete suggestions.",
	"configuration.surveys.enabled": "Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support."
}