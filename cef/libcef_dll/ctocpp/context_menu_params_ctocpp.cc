// Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/context_menu_params_ctocpp.h"


// VIRTUAL METHODS - Body may be edited by hand.

int CefContextMenuParamsCToCpp::GetXCoord() {
  if (CEF_MEMBER_MISSING(struct_, get_xcoord))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->get_xcoord(struct_);

  // Return type: simple
  return _retval;
}

int CefContextMenuParamsCToCpp::GetYCoord() {
  if (CEF_MEMBER_MISSING(struct_, get_ycoord))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->get_ycoord(struct_);

  // Return type: simple
  return _retval;
}

CefContextMenuParams::TypeFlags CefContextMenuParamsCToCpp::GetTypeFlags() {
  if (CEF_MEMBER_MISSING(struct_, get_type_flags))
    return CM_TYPEFLAG_NONE;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_context_menu_type_flags_t _retval = struct_->get_type_flags(struct_);

  // Return type: simple
  return _retval;
}

CefString CefContextMenuParamsCToCpp::GetLinkUrl() {
  if (CEF_MEMBER_MISSING(struct_, get_link_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_link_url(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefContextMenuParamsCToCpp::GetUnfilteredLinkUrl() {
  if (CEF_MEMBER_MISSING(struct_, get_unfiltered_link_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_unfiltered_link_url(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefContextMenuParamsCToCpp::GetSourceUrl() {
  if (CEF_MEMBER_MISSING(struct_, get_source_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_source_url(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

bool CefContextMenuParamsCToCpp::IsImageBlocked() {
  if (CEF_MEMBER_MISSING(struct_, is_image_blocked))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->is_image_blocked(struct_);

  // Return type: bool
  return _retval?true:false;
}

CefString CefContextMenuParamsCToCpp::GetPageUrl() {
  if (CEF_MEMBER_MISSING(struct_, get_page_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_page_url(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefContextMenuParamsCToCpp::GetFrameUrl() {
  if (CEF_MEMBER_MISSING(struct_, get_frame_url))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_frame_url(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefString CefContextMenuParamsCToCpp::GetFrameCharset() {
  if (CEF_MEMBER_MISSING(struct_, get_frame_charset))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_frame_charset(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

CefContextMenuParams::MediaType CefContextMenuParamsCToCpp::GetMediaType() {
  if (CEF_MEMBER_MISSING(struct_, get_media_type))
    return CM_MEDIATYPE_NONE;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_context_menu_media_type_t _retval = struct_->get_media_type(struct_);

  // Return type: simple
  return _retval;
}

CefContextMenuParams::MediaStateFlags CefContextMenuParamsCToCpp::GetMediaStateFlags(
    ) {
  if (CEF_MEMBER_MISSING(struct_, get_media_state_flags))
    return CM_MEDIAFLAG_NONE;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_context_menu_media_state_flags_t _retval = struct_->get_media_state_flags(
      struct_);

  // Return type: simple
  return _retval;
}

CefString CefContextMenuParamsCToCpp::GetSelectionText() {
  if (CEF_MEMBER_MISSING(struct_, get_selection_text))
    return CefString();

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_string_userfree_t _retval = struct_->get_selection_text(struct_);

  // Return type: string
  CefString _retvalStr;
  _retvalStr.AttachToUserFree(_retval);
  return _retvalStr;
}

bool CefContextMenuParamsCToCpp::IsEditable() {
  if (CEF_MEMBER_MISSING(struct_, is_editable))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->is_editable(struct_);

  // Return type: bool
  return _retval?true:false;
}

bool CefContextMenuParamsCToCpp::IsSpeechInputEnabled() {
  if (CEF_MEMBER_MISSING(struct_, is_speech_input_enabled))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->is_speech_input_enabled(struct_);

  // Return type: bool
  return _retval?true:false;
}

CefContextMenuParams::EditStateFlags CefContextMenuParamsCToCpp::GetEditStateFlags(
    ) {
  if (CEF_MEMBER_MISSING(struct_, get_edit_state_flags))
    return CM_EDITFLAG_NONE;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_context_menu_edit_state_flags_t _retval = struct_->get_edit_state_flags(
      struct_);

  // Return type: simple
  return _retval;
}


#ifndef NDEBUG
template<> long CefCToCpp<CefContextMenuParamsCToCpp, CefContextMenuParams,
    cef_context_menu_params_t>::DebugObjCt = 0;
#endif

