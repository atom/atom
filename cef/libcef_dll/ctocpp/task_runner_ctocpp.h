// Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#ifndef CEF_LIBCEF_DLL_CTOCPP_TASK_RUNNER_CTOCPP_H_
#define CEF_LIBCEF_DLL_CTOCPP_TASK_RUNNER_CTOCPP_H_
#pragma once

#ifndef USING_CEF_SHARED
#pragma message("Warning: "__FILE__" may be accessed wrapper-side only")
#else  // USING_CEF_SHARED

#include "include/cef_task.h"
#include "include/capi/cef_task_capi.h"
#include "libcef_dll/ctocpp/ctocpp.h"

// Wrap a C structure with a C++ class.
// This class may be instantiated and accessed wrapper-side only.
class CefTaskRunnerCToCpp
    : public CefCToCpp<CefTaskRunnerCToCpp, CefTaskRunner, cef_task_runner_t> {
 public:
  explicit CefTaskRunnerCToCpp(cef_task_runner_t* str)
      : CefCToCpp<CefTaskRunnerCToCpp, CefTaskRunner, cef_task_runner_t>(str) {}
  virtual ~CefTaskRunnerCToCpp() {}

  // CefTaskRunner methods
  virtual bool IsSame(CefRefPtr<CefTaskRunner> that) OVERRIDE;
  virtual bool BelongsToCurrentThread() OVERRIDE;
  virtual bool BelongsToThread(CefThreadId threadId) OVERRIDE;
  virtual bool PostTask(CefRefPtr<CefTask> task) OVERRIDE;
  virtual bool PostDelayedTask(CefRefPtr<CefTask> task,
      int64 delay_ms) OVERRIDE;
};

#endif  // USING_CEF_SHARED
#endif  // CEF_LIBCEF_DLL_CTOCPP_TASK_RUNNER_CTOCPP_H_

