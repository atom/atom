// Copyright (c) 2013 The Chromium Embedded Framework Authors. All rights
// reserved. Use of this source code is governed by a BSD-style license that
// can be found in the LICENSE file.
//
// ---------------------------------------------------------------------------
//
// This file was generated by the CEF translator tool. If making changes by
// hand only do so within the body of existing method and function
// implementations. See the translator.README.txt file in the tools directory
// for more information.
//

#include "libcef_dll/ctocpp/v8stack_frame_ctocpp.h"
#include "libcef_dll/ctocpp/v8stack_trace_ctocpp.h"


// STATIC METHODS - Body may be edited by hand.

CefRefPtr<CefV8StackTrace> CefV8StackTrace::GetCurrent(int frame_limit) {
  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_v8stack_trace_t* _retval = cef_v8stack_trace_get_current(
      frame_limit);

  // Return type: refptr_same
  return CefV8StackTraceCToCpp::Wrap(_retval);
}


// VIRTUAL METHODS - Body may be edited by hand.

bool CefV8StackTraceCToCpp::IsValid() {
  if (CEF_MEMBER_MISSING(struct_, is_valid))
    return false;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->is_valid(struct_);

  // Return type: bool
  return _retval?true:false;
}

int CefV8StackTraceCToCpp::GetFrameCount() {
  if (CEF_MEMBER_MISSING(struct_, get_frame_count))
    return 0;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  int _retval = struct_->get_frame_count(struct_);

  // Return type: simple
  return _retval;
}

CefRefPtr<CefV8StackFrame> CefV8StackTraceCToCpp::GetFrame(int index) {
  if (CEF_MEMBER_MISSING(struct_, get_frame))
    return NULL;

  // AUTO-GENERATED CONTENT - DELETE THIS COMMENT BEFORE MODIFYING

  // Execute
  cef_v8stack_frame_t* _retval = struct_->get_frame(struct_,
      index);

  // Return type: refptr_same
  return CefV8StackFrameCToCpp::Wrap(_retval);
}


#ifndef NDEBUG
template<> long CefCToCpp<CefV8StackTraceCToCpp, CefV8StackTrace,
    cef_v8stack_trace_t>::DebugObjCt = 0;
#endif

