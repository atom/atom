version: 2
jobs:
  build:
    macos:
      xcode: 8.3.3
    environment:
      XCODE_SCHEME: test
      XCODE_WORKSPACE: test
      XCODE_PROJECT: test
      TEST_JUNIT_XML_ROOT: /tmp/test_xml
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout
      - run:
          name: Install NVM
          command: curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.3/install.sh | PROFILE=~/.bash_profile bash
      - run:
          name: Install Node
          command: |
            nvm install 8.9.3
            nvm use 8.9.3
      - restore_cache:
          keys:
            - node-modules-v2-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "script/package.json"}}-{{ checksum "apm/package.json" }}
            - node-modules-v2-{{ arch }}-
      - restore_cache:
          keys:
            - build-cache-v1-{{ arch }}
      - run: mkdir -p $TEST_JUNIT_XML_ROOT

      - run: script/build --code-sign --compress-artifacts
      - save_cache:
          key: node-modules-v2-{{ arch }}-{{ checksum "package.json" }}-{{ checksum "script/package.json"}}-{{ checksum "apm/package.json" }}
          paths:
            - node_modules
            - apm/node_modules
            - script/node_modules

      # Lint the code
      - run: script/lint

      # Run Atom tests
      - run: osascript -e 'tell application "System Events" to keystroke "x"' # clear screen saver
      - run: caffeinate -s script/test

      - store_artifacts:
          path: out/atom-mac.zip
      - store_artifacts:
          path: out/atom-mac-symbols.zip
      - store_artifacts:
          path: docs/output/atom-api.json
      - store_test_results:
          path: /tmp/test_xml
      - store_artifacts:
          path: /tmp/test_xml
      - save_cache:
          key: build-cache-v1-{{ arch }}-{{ epoch }}
          paths:
            - electron
            - ~/.atom/compile-cache
            - ~/.atom/snapshot-cache

experimental:
  notify:
    branches:
      only:
        - master
