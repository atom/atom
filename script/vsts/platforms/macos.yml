jobs:
  - job: macOS_build
    displayName: macOS build
    dependsOn: GetReleaseVersion
    timeoutInMinutes: 180

    variables:
      ReleaseVersion: $[ dependencies.GetReleaseVersion.outputs['Version.ReleaseVersion'] ]
      IsReleaseBranch: $[ dependencies.GetReleaseVersion.outputs['Version.IsReleaseBranch'] ]
      IsSignedZipBranch: $[ dependencies.GetReleaseVersion.outputs['Version.IsSignedZipBranch'] ]
      RunCoreMainTests: true
    pool:
      vmImage: macos-10.14

    steps:
      - template: templates/preparation.yml

      - template: templates/cache.yml
        parameters:
          OS: macos

      - template: templates/bootstrap.yml

      - script: script/lint
        displayName: Run linter

      - template: templates/build.yml

      # core main tests
      - template: templates/test.yml

      - script: |
          cp $(Build.SourcesDirectory)/out/*.zip $(Build.ArtifactStagingDirectory)
        displayName: Stage Artifacts

      - template: templates/publish.yml
        parameters:
          artifacts:
            - filename: atom-mac.zip
              dir: $(Build.ArtifactStagingDirectory)
              condition: succeeded()
            - filename: atom-mac-symbols.zip
              dir: $(Build.ArtifactStagingDirectory)
              condition: succeeded()
            - filename: atom-api.json
              dir: $(Build.SourcesDirectory)/docs/output
              condition: succeeded()

  - job: macOS_tests
    displayName: macOS test
    dependsOn: macOS_build
    timeoutInMinutes: 180
    pool:
      vmImage: macos-10.14
    strategy:
      maxParallel: 3
      matrix:
        renderer:
          RunCoreRendererTests: true
          RunPackageTests: false
        packages-1:
          RunCoreTests: false
          RunPackageTests: 1
        packages-2:
          RunCoreTests: false
          RunPackageTests: 2

    steps:
      - template: templates/preparation.yml

      - template: templates/cache.yml
        parameters:
          OS: macos

      # The artifact caching task does not work on forks, so we need to
      # bootstrap again for pull requests coming from forked repositories.
      - template: templates/bootstrap.yml

      - template: templates/download-unzip.yml
        parameters:
          artifacts:
            - atom-mac.zip
            - atom-mac-symbols.zip

      - template: templates/test.yml
