jobs:
  - job: GetReleaseVersion
    steps:
      # This has to be done separately because VSTS inexplicably
      # exits the script block after `npm install` completes.
      - script: |
          cd script\vsts
          npm install
        displayName: npm install
      - script: node script\vsts\get-release-version.js --nightly
        name: Version

  # Import OS-specific build definitions
  - template: platforms/windows.yml
  - template: platforms/macos.yml
  - template: platforms/linux.yml


  - job: Release
    pool:
      vmImage: vs2017-win2016

    dependsOn:
      - GetReleaseVersion
      - Windows
      - Linux
      - macOS_tests

    variables:
      ReleaseVersion: $[ dependencies.GetReleaseVersion.outputs['Version.ReleaseVersion'] ]

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: 12.13.1
        displayName: Install Node.js 12.13.1

       #This has to be done separately because VSTS inexplicably
       #exits the script block after `npm install` completes.
      - script: |
          cd script\vsts
          npm install
        displayName: npm install

      - task: DownloadBuildArtifacts@0
        inputs:
          itemPattern: '**'
          downloadType: 'specific'
        displayName: Download Release Artifacts

      - script: |
          node $(Build.SourcesDirectory)\script\vsts\upload-artifacts.js --create-github-release --assets-path "$(System.ArtifactsDirectory)" --linux-repo-name "atom"
        env:
          GITHUB_TOKEN: $(GITHUB_TOKEN)
          ATOM_RELEASE_VERSION: $(ReleaseVersion)
          ATOM_RELEASES_S3_KEY: $(ATOM_RELEASES_S3_KEY)
          ATOM_RELEASES_S3_SECRET: $(ATOM_RELEASES_S3_SECRET)
          ATOM_RELEASES_S3_BUCKET: $(ATOM_RELEASES_S3_BUCKET)
          PACKAGE_CLOUD_API_KEY: $(PACKAGE_CLOUD_API_KEY)
        displayName: Create Nightly Release
