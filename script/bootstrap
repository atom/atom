#!/usr/bin/env node
var safeExec = require('./utils/child-process-wrapper.js').safeExec;
var path = require('path');

// Executes an array of commands one by one.
function executeCommands(commands, done, index) {
  index = (index == undefined ? 0 : index);
  if (index < commands.length) {
    var command = commands[index];
    var options = null;
    if (typeof command !== 'string') {
      options = command.options;
      command = command.command;
    }
    safeExec(command, options, executeCommands.bind(this, commands, done, index + 1));
  } else
    done(null);
}

// Join multiple commands into one line.
function joinCommands() {
  var commandSeparator = process.platform == 'win32' ? '&' : ';';
  return Array.prototype.slice.call(arguments, 0).join(commandSeparator);
}

var echoNewLine = process.platform == 'win32' ? 'echo.' : 'echo';
var commands = [
  'git submodule --quiet sync',
  'git submodule --quiet update --recursive --init',
  {command: joinCommands('cd vendor/apm', 'npm install --silent .'), options: {ignoreStdout: true}},
  {command: 'npm install --silent vendor/apm', options: {ignoreStdout: true}},
  echoNewLine,
  'node node_modules/atom-package-manager/bin/apm clean',
  'node node_modules/atom-package-manager/bin/apm install --silent',
];

process.chdir(path.dirname(__dirname));
executeCommands(commands, process.exit);
